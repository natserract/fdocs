{"version":3,"sources":["ng://salt/api/components/buttons/button.component.ts","ng://salt/api/components/buttons/button.directive.ts","ng://salt/api/salt.module.ts"],"names":["ButtonComponent","prototype","ngOnInit","selectors","ngContentSelectors","_c0","decls","vars","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵprojection","i0.ɵɵelementEnd","ButtonDirective","this","btnCheckboxTrue","btnCheckboxFalse","state","onClick","isDisable","toggle","getTrueVal","value","getFalseVal","writeValue","setDisabledState","registerOnChange","fn","registerOnTouched","hostVars","hostBindings","SaltModule","forRoot","ngModule","providers","imports","CommonModule","declarations","exports"],"mappings":"kVAeI,SAAAA,YAGAA,EAAAC,UAAAC,SAAA,8CAJSF,qCAAAA,EAAeG,UAAA,CAAA,CAAA,gBAAAC,mBAAAC,EAAAC,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,wBANpBE,EAAAA,eAAAA,EAAAA,UACIC,EAAAA,aAAAA,GACJC,EAAAA,qDCIR,SAAAC,IAKaC,KAAAC,iBAAkB,EAClBD,KAAAE,kBAAmB,EAG5BF,KAAAG,OAAQ,SAKeJ,EAAAb,UAAAkB,QAAvB,WACQJ,KAAKK,WAGTL,KAAKM,QAAQN,KAAKG,QAItBJ,EAAAb,UAAAC,SAAA,WACIa,KAAKM,OAAON,KAAKO,aAAeP,KAAKQ,QAI/BT,EAAAb,UAAAqB,WAAV,WACI,YAAuC,IAAzBP,KAAKC,iBACbD,KAAKC,iBAELF,EAAAb,UAAAuB,YAAV,WACI,YAAwC,IAA1BT,KAAKE,kBACbF,KAAKE,kBAIfH,EAAAb,UAAAoB,OAAA,SAAOH,GACHH,KAAKG,MAAQA,EACbH,KAAKQ,MAAQR,KAAKG,MAAQH,KAAKO,WAAaP,KAAKS,aAGrDV,EAAAb,UAAAwB,WAAA,SAAWF,GACPR,KAAKG,MAAQH,KAAKO,aAAeC,EACjCR,KAAKQ,MAAQA,EAAQR,KAAKO,WAAaP,KAAKS,aAGhDV,EAAAb,UAAAyB,iBAAA,aACAZ,EAAAb,UAAA0B,iBAAA,SAAiBC,KACjBd,EAAAb,UAAA4B,kBAAA,SAAkBD,sCA7CTd,qCAAAA,EAAeX,UAAA,CAAA,CAAA,GAAA,iBAAA,KAAA2B,SAAA,EAAAC,aAAA,SAAAtB,EAAAC,GAAA,EAAAD,2CAAfC,EAAAS,sJCbb,SAAAa,YAcSA,EAAAC,QAAP,WACE,MAAO,CACLC,SAAUF,EACVG,UAAW,qCAJJH,iEAAAA,IAAUI,QAAA,CAZZ,CACPC,EAAAA,uFAWSL,EAAU,CAAAM,aAAA,CARnBtC,EACAc,GAAesB,QAAA,CAJfC,EAAAA,cAAYE,QAAA,CAOZvC,EACAc","sourcesContent":["\nimport {\n    Component, Renderer2, Input, ElementRef, OnInit\n} from '@angular/core';\n\n@Component({\n    selector: 'salt-button',\n    template: `\n        <button>\n            <ng-content></ng-content>\n        </button>\n    `,\n})\n\nexport class ButtonComponent implements OnInit{\n    constructor(\n    ){}\n\n    ngOnInit() {\n\n    }\n}\n","\nimport {\n    Component,\n    Directive,\n    HostListener,\n    Input,\n    Output,\n    Provider,\n    OnInit,\n    HostBinding\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Directive({\n    selector: '[buttonCheckbox]',\n})\n\nexport class ButtonDirective implements ControlValueAccessor, OnInit {\n    @Input() btnCheckboxTrue = true;\n    @Input() btnCheckboxFalse = false;\n\n    @HostBinding('class.active')\n    state = false;\n\n    protected value: any;\n    protected isDisable: boolean;\n\n    @HostListener('click') onClick(): void {\n        if (this.isDisable) {\n            return;\n        }\n        this.toggle(!this.state);\n    }\n\n    // Set when init call the toggle function\n    ngOnInit() {\n        this.toggle(this.getTrueVal === this.value);\n    }\n\n    // Get value and validation value\n    protected getTrueVal(): boolean {\n        return typeof this.btnCheckboxTrue !== 'undefined'\n            ? this.btnCheckboxTrue : true;\n    }\n    protected getFalseVal(): boolean {\n        return typeof this.btnCheckboxFalse !== 'undefined'\n            ? this.btnCheckboxFalse : false;\n    }\n\n    // Function for toggle value\n    toggle(state: boolean): void {\n        this.state = state;\n        this.value = this.state ? this.getTrueVal : this.getFalseVal;\n    }\n\n    writeValue(value: any ): void {\n        this.state = this.getTrueVal === value;\n        this.value = value ? this.getTrueVal : this.getFalseVal;\n    }\n\n    setDisabledState(): void {}\n    registerOnChange(fn: () => {}): void {}\n    registerOnTouched(fn: () => {}): void {}\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ButtonComponent } from './components/buttons/button.component';\nimport { ButtonDirective } from './components/buttons/button.directive';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ButtonComponent,\n    ButtonDirective\n  ],\n  exports: [\n    ButtonComponent,\n    ButtonDirective\n  ]\n})\nexport class SaltModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SaltModule,\n      providers: []\n    };\n  }\n }\n"]}